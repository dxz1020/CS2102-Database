How to use API URL:
Suppose the URL is '/search', the actual URL is 'sitename/search'
If parameters are to be passed, the URL will be like 'sitename/search?title=A'
For POST parameters, set 'Content-Type' request header to 'application/json'.

1. Search for Items
   Method: GET
   URL: /search
   Parameters: title -> The title of the item to search
	       category -> The category of the item to search
	       genre -> The genre of the item to search. category must be specified.
	       device -> The platform for the searched item.
	       sortby -> The field by which to sort the items by.
   * Note: Not specifying any parameters causes the entire list of items to be
	   displayed.
   Returns: An array of items.

2. Login
   Method: POST
   URL: /login
   Parameters: email -> The user's login email address
	       password -> The login password
	       admin -> Either 'Y' or 'N'
   Returns 1 if successful and 0 if failed

3. Logout
   Method: GET
   URL: /logout

4. Buy(requires login)
   Method: POST
   URL: /transactions/buy
   Parameters: itemid -> The id of the item to buy.

5. Rent(requires login)
   Method: POST
   URL: /transactions/rent
   Parameters: itemid -> The id of the item to rent.

6. View Transaction History(requires login)
   Method: GET
   URL: /transactions/history
   Return values: { array of purchases, array pf rents }
   Purchase array keys: "ITEM", "PURCHASE_DATE"
   Rent array keys: "ITEM", "BORROW_DATE", "DUE_DATE"

7. Like(requires login)
   Method: POST
   URL: /transactions/like
   Parameters: itemid -> The id of the item to like.

8. Unlike(requires login)
   Method: POST
   URL: /transactions/unlike
   Parameters: itemid -> The id of the item to unlike.

9. Add content(requires login as admin)
   Method: POST
   URL: /admin/additem
   Parameters: title -> The title of the item to add
   	       category -> The category of the item to add
   	       genre -> The genre of the item to add
   	       device -> The platform of the item to add
   	       rdate -> The date of the item to add
   	       price -> The price of the item to add
   	       rent -> The rent of the item to add

10. Delete item(requires login as admin)
    Method: POST
    URL: /admin/deleteitem
    Parameters: itemid -> The id of the item to delete

11. Add User(requires login as admin)
    Method: POST
    URL: /admin/addaccount
    Parameters: email -> The email of the new user
		username -> The username
		password -> The password
		admin -> Whether this user is to be an admin
    Returns: 1 if the user is successfully added, 0 otherwise.

12. Delete User(requires login as admin)
    Method: POST
    URL: /admin/deleteaccount
    Parameters: email -> The email address used to identify the account.

13. List all transactions(requires login as admin)
    Method: GET
    URL: /admin/transactions
    Returns: An array of 2 arrays. The 1st array contains purchases.
	     The 2nd array contains rents.

14. List all accounts(requires login as admin)
    Method: GET
    URL: /admin/accounts
    Returns: An array of accounts
